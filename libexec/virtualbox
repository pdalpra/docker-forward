#!/usr/bin/env bash

set -e

. $_DOCKER_FORWARD_ROOT/libexec/utils

RULES_REGEX="^NIC 1 Rule.*"
PROTOCOL_REGEX="(tcp|udp)"
PORT_REGEX="guest port = ([[:digit:]]*)"

port_name() {
  echo "$1-$2"
}

is_tcp() {
  [[ "$1" == "tcp" ]]
}

is_udp() {
 [[ "$2" == "udp" ]]
}

add_port() {
  if is_forwarded "$1" "$2"; then
    echo "${1^^} port $2 is already forwarded."
    exit 1
  else
    VBoxManage controlvm $(get_selected_vm) natpf1 $(port_name $1 $2),$1,,$2,,$2
    echo "${1^^} port $2 is now forwarded."
  fi
}

remove_port() {
  if is_forwarded "$1" "$2"; then
    if [[ $2 = 22 ]]; then
      echo "Cannot remove port forwarding for port 22: it would break Docker."
      exit 1
    else
      VBoxManage controlvm "$(get_selected_vm)" natpf1 delete "$(port_name $1 $2)"
      echo "${1^^} port $2 is not forwarded anymore."
    fi
  else
    echo "${1^^} port $2 is not forwarded."
    exit 1
  fi
}

list_vms() {
  for line in "$(VBoxManage list vms)"; do
    while IFS=$' ' read -r vm id; do
      echo "$vm" | tr -d '\"'
    done <<< "$line"
  done
}

list_forwarded_ports() {
  vm_info="$(VBoxManage showvminfo $(get_selected_vm))"
  while IFS=$'\n' read -r line ; do
    if [[ "$line" =~ $RULES_REGEX ]]; then
      protocol=$(extract "$line" "$PROTOCOL_REGEX")
      port=$(extract "$line" "$PORT_REGEX")
      echo "$protocol/$port"
    fi
  done <<< "$vm_info"
}

is_forwarded() {
  is_forwarded=0
  while IFS=$'\n' read -r line ; do
    while IFS="/" read -r protocol port ; do
      if [[ "$protocol" == "$1" ]] && [[ "$port" == "$2" ]]; then
        is_forwarded=1
        break 2
      fi
    done <<< "$line"
  done <<< "$(list_forwarded_ports)"
  [[ $is_forwarded == 1 ]]
}

vm_list_completions() {
    echo -e "$(list_vms)"
    exit 0
}
